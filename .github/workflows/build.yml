name: "build"
on:
  # XXX: Temp change
  pull_request:
  push:
    branches:
      - master

jobs:
  # XXX: Create and publish the builder image separatedly
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        # XXX: Why is this necessary?
        ref: ${{ github.head_ref }}

    - name: Registry login
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

    # BUILDKIT_INLINE_CACHE creates the image in such a way that you can
    # then use --cache-from (think of a remote cache)
    # In the case of the Docker builder iamge, we should always see that it's using the remote cache
    # XXX: Would a Docker push notice that is already there?
    - name: Docker builder image
      run: |
        docker build . \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -t ghcr.io/getsentry/action-release-builder-image:latest \
          --cache-from ghcr.io/getsentry/action-release-builder-image:latest \
          --target builder
        # XXX: For now
        docker push ghcr.io/getsentry/action-release-builder-image:latest
        if [ "$GITHUB_REF" == 'refs/head/master' ]; then
          # The latest tag should only be published on `master`
          docker push ghcr.io/getsentry/action-release-builder-image:latest
        fi
    
    - name: Docker action-release image
      run: |
        docker build . \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -t ghcr.io/getsentry/action-release-image:latest \
          -t ghcr.io/getsentry/action-release-image:${{ github.sha }} \
          --cache-from ghcr.io/getsentry/action-release-image:latest
        docker push ghcr.io/getsentry/action-release-image:${{ github.sha }}
        # XXX: For now
        docker push ghcr.io/getsentry/action-release-image:latest