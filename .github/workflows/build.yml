name: "build"
on:
  push:
    branches:
      - master
      # XXX: Remove this
      - armenzg/ci/docker-release-to-ghr

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        # XXX: Why is this necessary?
        ref: ${{ github.head_ref }}

    # BUILDKIT_INLINE_CACHE creates the image in such a way that you can
    # then use --cache-from (think of a remote cache)
    # This feature can be used because of using the buildx plugin
    # In the case of the Docker builder iamge, we should always see that it's using the remote cache
    # NOTE: Sadly, the COPY line from the builder image (in the Dockerfile) always invalidates the cache,
    # thus, we do not benefit from using --cache-from. The multi-stage build still gives us a smaller footprint
    # TODO: Optimize the Dockerfile to take advantage of proper caching
    - name: Docker build images
      run: |
        docker buildx build . \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -t ghcr.io/getsentry/action-release-image:latest \
          --cache-from ghcr.io/getsentry/action-release-image:latest \
          --target app

    # Test Docker build before publishing
    - name: Use local Dockerfile for action
      uses: './.github/actions/use-local-dockerfile'

    - name: Mock creating a Sentry release
      uses: ./
      env:
        MOCK: true
      with:
        environment: production

    - name: Login and publish
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        # The latest tag should only be published on `master`
        docker push ghcr.io/getsentry/action-release-image:latest

  # End to end testing: what the users would do
  # XXX: TODO: Notify the team if this fails
  test-action-release:
    needs: docker-build
    name: Create a Sentry release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # This is necessary in order for the action to determine what commits
        # are part of the release
        with:
          fetch-depth: 0

      # Created "End to end action-release Integration" integration under Ecosystem's org
      - name: Create Sentry release
        # XXX: We need to test both master and v1 (official one)
        # XXX: We need to create a v1 tag for the release to be completed
        # XXX: Change this to master
        uses: getsentry/action-release@armenzg/ci/docker-release-to-ghr
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        with:
          projects: "action-release"
          environment: production